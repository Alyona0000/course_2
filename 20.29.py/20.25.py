#T20.25 Описати клас Decks, який призначений для моделювання великої
#кількості випробувань з роздавання гральних карт. Одна колода карт
#складається максимум з 52 карт (по 13 карт 4 мастей). Гідність карт від 2 до
#10, а також валет, дама, король, туз. Масті – піки, трефа, бубни, черви. У тій
#чи іншій грі може встановлюватись обмеження щодо мінімальної гідності
#карт (наприклад, починаючи з 7). При одному роздаванні карт колода

#тасується випадковим чином та m гравцям роздають по n карт. Інші карти
#залишаються в колоді. Гравець, якому роздають карти, називається «рукою».
#Зовнішнє представлення карти – це кортеж з двох полів, що є рядками
#(<гідність>, <масть>). Для використання масивів numpy кожну карту у
#внутрішньому представленні можна закодувати цілим числом: гідність – від
#2 (2) до 14 (туз), масть – 1, 2, 3, 4 помножити на 100. Так, наприклад, 9 трефа
#буде мати код 209. Для отримання масті карти k достатньо виконати k // 100,
#а для отримання гідності достатньо виконати k % 100.
#Клас Decks повинен містити методи для перетворення карти з зовнішнього
#представлення у внутрішнє та навпаки, метод роздавання карт, метод
#«фіксованого» роздавання та, можливо, інші методи. Метод роздавання карт
#повинен повертати тривимірний масив з N випадковим чином розданих
#колод (m гравцям по n карт всього m*n*N) а також двовимірний масив –
#залишків N колод. Метод фіксованого роздавання повинен фіксувати карти
#на першій руці та випадковим чином роздавати їх на всі інші руки.
#Застосувати клас Decks для розв’язання задачі: 4 гравцям роздають по 5 карт.
#Обчислити ймовірність того, що на будь-якій руці опиняться:
#а) 4 карти однакової гідності.
#б) 5 карт однієї масті, гідність яких після сортування монотонно зростає на 1.
#Розв’язати задачу методом Монте-Карло з використанням масивів numpy.
#Векторизувати програмний код, наскільки можливо.
#`~~~~~~~~~~~~~~~~~~~~~~~~~



#створити клас декс. В когструкторі приймає ранк від 2 до 10, інше вважаєтся помилкою. 
# Сгенерувати масив карт в памяті та створити метоти тусуємо,  колода на екран, видача карт
#це повинно повертати двовимірний масив 1 вимір гравець а 2 карта

import random

class Deck:
    def __init__(self):
        self.suits = ["♠️", "♥️", "♦️", "♣️"]
        self.ranks = ["2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A"]
        self.ranks
        self.cards = []
        i = 0
        while i < len(self.suits):
            j = 0
            while j < len(self.ranks):
                self.cards.append( self.suits[i]+ "  " +self.ranks[j] )
                j = j + 1
            i = i + 1
        #self.deck = [rank + " " + suit for suit in self.suits for rank in self.ranks]
    def print(self):

        print(self.cards)


    def shuffle(self):# тасуємо колоду
      random.shuffle(self.cards)
      

    def deal(self, cards_per_player):
        if cards_per_player * self.players > len(self.deck):
            raise ValueError("Недостатньо карт у колоді")
        
        hands = []
        for i in range(self.players):
            hand = []
            for j in range(cards_per_player):
                hand.append(self.deck.pop())
            hands.append(hand)
        return hands


# Приклад використання
deck = Deck()   # створюємо колоду для 4 гравців
deck.print()  
deck.shuffle() 
deck.print() 
     # показуємо колоду   
#deck.shuffle()        # тасуємо
#deck.show_deck()      # показуємо колоду
#hands = deck.deal(5)  # роздаємо по 5 карт кожному гравцю
#print(hands)          # друкуємо 2D масив: [гравець][карти]
